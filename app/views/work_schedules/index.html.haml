- content_for :title, "Calendar"
- content_for :active_tab, :calendar

.layout.horizontal.center-justified.calendar
  %table.center-text.calendar
    %tr
      %th.time_slot
      %th.day{ calendar_day_header_data("M", params) }
        .layout.horizontal.center-center= calendar_day_header("Monday", nil, "T")
      %th.day{ calendar_day_header_data("T", params) }
        .layout.horizontal.center-center= calendar_day_header("Tuesday", "M", "W")
      %th.day{ calendar_day_header_data("W", params) }
        .layout.horizontal.center-center= calendar_day_header("Wednesday", "T", "R")
      %th.day{ calendar_day_header_data("R", params) }
        .layout.horizontal.center-center= calendar_day_header("Thursday", "W", "F")
      %th.day{ calendar_day_header_data("F", params) }
        .layout.horizontal.center-center= calendar_day_header("Friday", "R", nil)

    - @online_courses.each do |online_course|
      %tr
        %td.time_slot
          = online_course.days
        - %w(M T W R F).each do |day|
          %td{ calendar_time_slot_data(day, params).merge(class: "day_time_slot") }
            .schedule= online_course.course.condensed_course
    - calendar_time_range.step(30.minutes) do |start_time|
      %tr
        %td.time_slot= Time.at(start_time).utc.strftime("%l:%M%P")
        - %w(M T W R F).each do |day|
          - if (offering = find_overlapping_offering(@offerings, day, start_time))
            %td.day_time_slot{ calendar_time_slot_data(day, params,
              id: offering.course.condensed_course).merge(id: work_schedule_id(day, start_time)) }
              .schedule= offering.course.condensed_course
          - elsif (overlapping_ws = find_overlapping_work_schedule(@work_schedules,
                                                                   day, start_time))
            %td{ calendar_time_slot_data(day, params).merge(id: work_schedule_id(day, start_time),
                  class: "day_time_slot mdc-ripple-surface mdc-ripple-surface--accent") }
              = link_to "", overlapping_ws, class: "mdc-theme--accent-bg",
                                            data: { method: :delete }, remote: true
          - else
            %td{ calendar_time_slot_data(day, params).merge(id: work_schedule_id(day, start_time),
                  class: "day_time_slot mdc-ripple-surface mdc-ripple-surface--accent") }
              = link_to "", work_schedules_path(day: day, start_time: start_time),
                          method: :post, remote: true
